/* NOTES
    For the decoding of a cypher, consider storing the last 3 variables, and looking for
    the word 'the'.




*/
#include <stdio.h>
#include <string.h>

char lengthString(char key[]);                      /* this function returns the length of the string using strlen which is included in string.h */
char encryptCypherCycle(char key[], int offset);
char decryptCypherCycle(char key[], int offset);

int main() {
    char key[1024] = {"BCDEF"};
    int offset = 4;
        printf("the text to be encoded is %s\n", key);
        printf("the length of the string is %d\n", lengthString(key));
        printf("the offset of the cyper is %d\n", offset);
    decryptCypherCycle(key, offset);
}

char lengthString(char key[]) {
    int length = strlen(key);

return length;
}


/*------------------------------------------------------------------------------*/

char encryptCypherCycle(char key[], int offset) {
    char encrypt;
    int index;
    int length = lengthString(key);
    
    printf("the encrypted code is: ");  
        for(index = 0; index < length; index++) {
            encrypt = (key[index] + offset);
            
            if (encrypt == (32 + offset)) {
                encrypt = 32;
            }
            else if (encrypt > 'Z') {
                
                encrypt = encrypt - 26;
            }
            else if (encrypt < 'A') {
            
                encrypt = encrypt + 26;
            }
            printf("%c", encrypt);
            
        
    }
return 0;
}

/*------------------------------------------------------------------------------*/
char decryptCypherCycle(char key[], int offset) {
    char encrypt;
    int index;
    int length = lengthString(key);
    
    printf("the decrypted code is: ");
    for(index = 0; index < length; index++) {
        encrypt = (key[index] - offset);
        if ((encrypt >= (32 - offset)) && (encrypt <= (64 - offset))) {
                encrypt = key[index] + offset;
                printf("%c", encrypt);
            }
            else if (encrypt > 'Z') {
                
                encrypt = encrypt - 26;
                printf("%c", encrypt);
            }
            else if (encrypt < 'A') {
            
                encrypt = encrypt + 26;
                printf("%c", encrypt);
            }
            
            
    }
return 0;
}





